@model List<AESApplications.Models.JobHistoryModel>

@{
    ViewBag.Title = "Job History";
}

<div class="content">

    <h1>@ViewBag.Title</h1>

    @functions
    {
        string getNumberWithSuffix(int number)
        {
            switch (number % 10)
            {
                case 1: return number + "st";
                case 2: return number + "nd";
                case 3: return number + "rd";
                default: return number + "th";
            }
        }
    }

    @using (Html.BeginForm("Index", "JobHistory", FormMethod.Post))
    {

        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        for (int i = 0; i < Model.Count; i++)
        {
            @Html.HiddenFor(m => m[i].applicantId, Model[i].applicantId);
            @Html.HiddenFor(m => m[i].historyId, Model[i].historyId);
        
        <fieldset>
            <legend class="label-blue text-shadow">@getNumberWithSuffix(i + 1) Most Recent Job</legend>

                <div style="display: table;">

                        <div style="display: table-row;">
                            <div class="question">@Html.LabelFor(m => m[i].employer)</div>
                            <div class="answer">
                                @Html.TextBoxFor(m => m[i].employer, new { style = "width: 200px; float: left; text-transform: capitalize;" })
                                <div class="validation">@Html.ValidationMessageFor(m => m[i].employer)</div>
                            </div>
                        </div>

                        <div style="display: table-row;">
                            <div class="question">@Html.LabelFor(m => m[i].street)</div>
                            <div class="answer">
                                @Html.TextBoxFor(m => m[i].street, new { style = "width: 300px; float: left; text-transform: capitalize;" })
                                <div class="validation">@Html.ValidationMessageFor(m => m[i].street)</div>
                            </div>
                        </div>

                        <div style="display: table-row;">
                            <div class="question">@Html.LabelFor(m => m[i].city)</div>
                            <div class="answer">
                                @Html.TextBoxFor(m => m[i].city, new { style = "width: 200px; float: left; text-transform: capitalize;" })
                                <div class="validation">@Html.ValidationMessageFor(m => m[i].city)</div>
                            </div>
                        </div>

                        <div style="display: table-row;">
                            <div class="question">@Html.LabelFor(m => m[i].state)</div>
                            <div class="answer">
                                @Html.TextBoxFor(m => m[i].state, new { style = "width: 30px; float: left; text-transform: uppercase;", maxlength = 2 })
                                <div class="validation">@Html.ValidationMessageFor(m => m[i].state)</div>
                            </div>
                        </div>

                        <div style="display: table-row;">
                            <div class="question">@Html.LabelFor(m => m[i].zip)</div>
                            <div class="answer">
                                @Html.TextBoxFor(m => m[i].zip, new { style = "width: 100px; float: left;", maxlength = 5 })
                                <div class="validation">@Html.ValidationMessageFor(m => m[i].zip)</div>
                            </div>
                        </div>

                        <div style="display: table-row;">
                            <div class="question">@Html.LabelFor(m => m[i].position)</div>
                            <div class="answer">
                                @Html.TextBoxFor(m => m[i].position, new { style = "width: 200px; float: left; text-transform: capitalize;" })
                                <div class="validation">@Html.ValidationMessageFor(m => m[i].position)</div>
                            </div>
                        </div>

                        <div style="display: table-row;">
                            <div class="question">@Html.LabelFor(m => m[i].reason_for_leaving)</div>
                            <div class="answer">
                                @Html.TextAreaFor(m => m[i].reason_for_leaving, new { style = "width: 400px; float: left;", maxlength = 50 })
                                <div class="validation">@Html.ValidationMessageFor(m => m[i].reason_for_leaving)</div>
                            </div>
                        </div>

                        <div style="display: table-row;">
                            <div class="question">@Html.LabelFor(m => m[i].from_month)</div>
                            <div class="answer">
                                <div style="float: left;">
                                    @Html.TextBoxFor(m => m[i].from_month, new { style = "width: 30px;" }) / @Html.TextBoxFor(m => m[i].from_year, new { style = "width: 60px;" })
                                </div>
                                <div class="validation">
                                    @Html.ValidationMessageFor(m => m[i].from_month)
                                    @Html.ValidationMessageFor(m => m[i].from_year)
                                </div>
                            </div>
                        </div>

                        <div style="display: table-row;">
                            <div class="question">@Html.LabelFor(m => m[i].to_month)</div>
                            <div class="answer">
                                <div style="float: left;">
                                    @Html.TextBoxFor(m => m[i].to_month, new { style = "width: 30px;" }) / @Html.TextBoxFor(m => m[i].to_year, new { style = "width: 60px;" })
                                </div>
                                <div class="validation">
                                    @Html.ValidationMessageFor(m => m[i].to_month)
                                    @Html.ValidationMessageFor(m => m[i].to_year)
                                </div>
                            </div>
                        </div>

                        <div style="display: table-row;">
                            <div class="question">@Html.LabelFor(m => m[i].phone)</div>
                            <div class="answer">
                                @Html.TextBoxFor(m => m[i].phone, new { style = "width: 100px; float: left;" })
                                <div class="validation">@Html.ValidationMessageFor(m => m[i].phone)</div>
                            </div>
                        </div>

                        <div style="display: table-row;">
                            <div class="question">@Html.LabelFor(m => m[i].supervisor)</div>
                            <div class="answer">
                                @Html.TextBoxFor(m => m[i].supervisor, new { style = "width :200px; float: left; text-transform: capitalize;" })
                                <div class="validation">@Html.ValidationMessageFor(m => m[i].supervisor)</div>
                            </div>
                        </div>

                        <div style="display: table-row;">
                            <div class="question">@Html.LabelFor(m => m[i].salary_start)</div>
                            <div class="answer">
                                @Html.TextBoxFor(m => m[i].salary_start, new { style = "width: 100px; float: left;" })
                                <div class="validation">@Html.ValidationMessageFor(m => m[i].salary_start)</div>
                            </div>
                        </div>

                        <div style="display: table-row;">
                            <div class="question">@Html.LabelFor(m => m[i].salary_end)</div>
                            <div class="answer">
                                @Html.TextBoxFor(m => m[i].salary_end, new { style = "width: 100px; float: left;" })
                                <div class="validation">@Html.ValidationMessageFor(m => m[i].salary_end)</div>
                            </div>
                        </div>

                        <div style="display: table-row;">
                            <div class="question">@Html.LabelFor(m => m[i].responsibilities)</div>
                            <div class="answer">
                                @Html.TextAreaFor(m => m[i].responsibilities, new { style = "width: 400px; float: left;", maxlength=2000 })
                                <div class="validation">@Html.ValidationMessageFor(m => m[i].responsibilities)</div>
                            </div>
                        </div>

                </div>

            </fieldset>
        
            <br />

        }

        <input type="submit" value="Continue" class="label-green text-shadow" />
    }

</div>
