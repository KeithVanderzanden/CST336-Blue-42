@model List<AESApplications.Models.JobHistoryModel>

@{
    ViewBag.Title = "Job History";
}

<div style="text-align: center; margin: 20px;">

    <div class="content-header">@ViewBag.Title</div>

    @functions
    {
        string getNumberWithSuffix(int number)
        {
            switch (number % 10)
            {
                case 1: return number + "st";
                case 2: return number + "nd";
                case 3: return number + "rd";
                default: return number + "th";
            }
        }
    }

    @using (Html.BeginForm("Index", "JobHistory", FormMethod.Post))
    {

        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        for (int i = 0; i < Model.Count; i++)
        {
            @Html.HiddenFor(m => m[i].applicantId, Model[i].applicantId);
            @Html.HiddenFor(m => m[i].historyId, Model[i].historyId);
            <div class="jobhistory-container box-shadow">

                <div class="jobhistory-tab text-shadow">
                    <div style="display: table-cell; padding: 10px;">
                        @getNumberWithSuffix(i + 1) Most Recent Job
                    </div>
                    <div style="display: table-cell; background-color: white;"></div>
                </div>

                <div class="form-container" style="display: block;">

                        <div style="display: table-row;">
                            <div class="form-title">@Html.LabelFor(m => m[i].employer)</div>
                            <div class="form-content">
                                @Html.TextBoxFor(m => m[i].employer, new { Class = "field-input", style = "width:200px;text-transform:capitalize;" })
                                <br />
                                <div id="validation">@Html.ValidationMessageFor(m => m[i].employer)</div>
                            </div>
                        </div>

                        <div style="display: table-row;">
                            <div class="form-title">@Html.LabelFor(m => m[i].street)</div>
                            <div class="form-content">
                                @Html.TextBoxFor(m => m[i].street, new { Class = "field-input", style = "width:300px;text-transform:capitalize;" })
                                <br />
                                <div id="validation">@Html.ValidationMessageFor(m => m[i].street)</div>
                            </div>
                        </div>

                        <div style="display: table-row;">
                            <div class="form-title">@Html.LabelFor(m => m[i].city)</div>
                            <div class="form-content">
                                @Html.TextBoxFor(m => m[i].city, new { Class = "field-input", style = "width:200px;text-transform:capitalize;" })
                                <br />
                                <div id="validation">@Html.ValidationMessageFor(m => m[i].city)</div>
                            </div>
                        </div>

                        <div style="display: table-row;">
                            <div class="form-title">@Html.LabelFor(m => m[i].state)</div>
                            <div class="form-content">
                                @Html.TextBoxFor(m => m[i].state, new { Class = "field-input", style = "width:30px; text-transform:uppercase;", maxlength = 2 })
                                <br />
                                <div id="validation">@Html.ValidationMessageFor(m => m[i].state)</div>
                            </div>
                        </div>

                        <div style="display: table-row;">
                            <div class="form-title">@Html.LabelFor(m => m[i].zip)</div>
                            <div class="form-content">
                                @Html.TextBoxFor(m => m[i].zip, new { Class = "field-input", style = "width:100px;", maxlength = 5 })
                                <br />
                                <div id="validation">@Html.ValidationMessageFor(m => m[i].zip)</div>
                            </div>
                        </div>

                        <div style="display: table-row;">
                            <div class="form-title">@Html.LabelFor(m => m[i].position)</div>
                            <div class="form-content">
                                @Html.TextBoxFor(m => m[i].position, new { Class = "field-input", style = "width:200px;text-transform:capitalize;" })
                                <br />
                                <div id="validation">@Html.ValidationMessageFor(m => m[i].position)</div>
                            </div>
                        </div>

                        <div style="display: table-row;">
                            <div class="form-title">@Html.LabelFor(m => m[i].reason_for_leaving)</div>
                            <div class="form-content">
                                @Html.TextAreaFor(m => m[i].reason_for_leaving, new { Class = "field-input", style = "width:400px;", maxlength=50 })
                                <br />
                                <div id="validation">@Html.ValidationMessageFor(m => m[i].reason_for_leaving)</div>
                            </div>
                        </div>

                        <div style="display: table-row;">
                            <div class="form-title">@Html.LabelFor(m => m[i].from_month)</div>
                            <div class="form-content">
                                @Html.TextBoxFor(m => m[i].from_month, new { Class = "field-input", style = "width:30px;" }) / @Html.TextBoxFor(m => m[i].from_year, new { Class = "field-input", style = "width:60px;" })
                                <br />
                                <div id="validation">
                                    @Html.ValidationMessageFor(m => m[i].from_month)
                                    @Html.ValidationMessageFor(m => m[i].from_year)
                                </div>
                            </div>
                        </div>

                        <div style="display: table-row;">
                            <div class="form-title">@Html.LabelFor(m => m[i].to_month)</div>
                            <div class="form-content">
                                @Html.TextBoxFor(m => m[i].to_month, new { Class = "field-input", style = "width:30px;" }) / @Html.TextBoxFor(m => m[i].to_year, new { Class = "field-input", style = "width:60px;" })
                                <br />
                                <div id="validation">
                                    @Html.ValidationMessageFor(m => m[i].to_month)
                                    @Html.ValidationMessageFor(m => m[i].to_year)
                                </div>
                            </div>
                        </div>

                        <div style="display: table-row;">
                            <div class="form-title">@Html.LabelFor(m => m[i].phone)</div>
                            <div class="form-content">
                                @Html.TextBoxFor(m => m[i].phone, new { Class = "field-input", style = "width:100px;" })
                                <br />
                                <div id="validation">@Html.ValidationMessageFor(m => m[i].phone)</div>
                            </div>
                        </div>

                        <div style="display: table-row;">
                            <div class="form-title">@Html.LabelFor(m => m[i].supervisor)</div>
                            <div class="form-content">
                                @Html.TextBoxFor(m => m[i].supervisor, new { Class = "field-input", style = "width:200px;text-transform:capitalize;" })
                                <br />
                                <div id="validation">@Html.ValidationMessageFor(m => m[i].supervisor)</div>
                            </div>
                        </div>

                        <div style="display: table-row;">
                            <div class="form-title">@Html.LabelFor(m => m[i].salary_start)</div>
                            <div class="form-content">
                                @Html.TextBoxFor(m => m[i].salary_start, new { Class = "field-input", style = "width:100px;" })
                                <br />
                                <div id="validation">@Html.ValidationMessageFor(m => m[i].salary_start)</div>
                            </div>
                        </div>

                        <div style="display: table-row;">
                            <div class="form-title">@Html.LabelFor(m => m[i].salary_end)</div>
                            <div class="form-content">
                                @Html.TextBoxFor(m => m[i].salary_end, new { Class = "field-input", style = "width:100px;" })
                                <br />
                                <div id="validation">@Html.ValidationMessageFor(m => m[i].salary_end)</div>
                            </div>
                        </div>

                        <div style="display: table-row;">
                            <div class="form-title">@Html.LabelFor(m => m[i].responsibilities)</div>
                            <div class="form-content">
                                @Html.TextAreaFor(m => m[i].responsibilities, new { Class = "field-input", style = "width:400px;", maxlength=2000 })
                                <br />
                                <div id="validation">@Html.ValidationMessageFor(m => m[i].responsibilities)</div>
                            </div>
                        </div>

                </div>

                <div class="job-bottom-box">
                    Click here to expand or hide job fields.
                </div>

            </div>

        }

        <input type="submit" value="Continue" />

    }

    <script>

        $('.job-bottom-box').prev('div').hide();

        $('.job-bottom-box')
        .css('cursor', 'default')
        .click(
          function () {
              $(this).prev('div').slideToggle('fast');
          }
        )

    </script>

</div>
