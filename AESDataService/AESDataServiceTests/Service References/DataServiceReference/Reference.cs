//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AESDataServiceTests.DataServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataServiceReference.IDataService")]
    public interface IDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/getJobs", ReplyAction="http://tempuri.org/IDataService/getJobsResponse")]
        AESDataService.Job[] getJobs(int storeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/getJobs", ReplyAction="http://tempuri.org/IDataService/getJobsResponse")]
        System.Threading.Tasks.Task<AESDataService.Job[]> getJobsAsync(int storeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/getStoreInfo", ReplyAction="http://tempuri.org/IDataService/getStoreInfoResponse")]
        AESDataService.Store getStoreInfo(int storeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/getStoreInfo", ReplyAction="http://tempuri.org/IDataService/getStoreInfoResponse")]
        System.Threading.Tasks.Task<AESDataService.Store> getStoreInfoAsync(int storeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/getQuestions", ReplyAction="http://tempuri.org/IDataService/getQuestionsResponse")]
        AESDataService.Question[] getQuestions(int[] positionIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/getQuestions", ReplyAction="http://tempuri.org/IDataService/getQuestionsResponse")]
        System.Threading.Tasks.Task<AESDataService.Question[]> getQuestionsAsync(int[] positionIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/getStoreLocation", ReplyAction="http://tempuri.org/IDataService/getStoreLocationResponse")]
        string getStoreLocation(int jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/getStoreLocation", ReplyAction="http://tempuri.org/IDataService/getStoreLocationResponse")]
        System.Threading.Tasks.Task<string> getStoreLocationAsync(int jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/getApplicantId", ReplyAction="http://tempuri.org/IDataService/getApplicantIdResponse")]
        int getApplicantId(string ssn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/getApplicantId", ReplyAction="http://tempuri.org/IDataService/getApplicantIdResponse")]
        System.Threading.Tasks.Task<int> getApplicantIdAsync(string ssn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/authenticateUser", ReplyAction="http://tempuri.org/IDataService/authenticateUserResponse")]
        int authenticateUser(string ssn, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/authenticateUser", ReplyAction="http://tempuri.org/IDataService/authenticateUserResponse")]
        System.Threading.Tasks.Task<int> authenticateUserAsync(string ssn, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/authenticateManager", ReplyAction="http://tempuri.org/IDataService/authenticateManagerResponse")]
        string authenticateManager(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/authenticateManager", ReplyAction="http://tempuri.org/IDataService/authenticateManagerResponse")]
        System.Threading.Tasks.Task<string> authenticateManagerAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/getJobsAppliedFor", ReplyAction="http://tempuri.org/IDataService/getJobsAppliedForResponse")]
        int[] getJobsAppliedFor(int applicantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/getJobsAppliedFor", ReplyAction="http://tempuri.org/IDataService/getJobsAppliedForResponse")]
        System.Threading.Tasks.Task<int[]> getJobsAppliedForAsync(int applicantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/getPersonalInfo", ReplyAction="http://tempuri.org/IDataService/getPersonalInfoResponse")]
        AESDataService.PersonalInfo getPersonalInfo(int applicantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/getPersonalInfo", ReplyAction="http://tempuri.org/IDataService/getPersonalInfoResponse")]
        System.Threading.Tasks.Task<AESDataService.PersonalInfo> getPersonalInfoAsync(int applicantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/getAvailability", ReplyAction="http://tempuri.org/IDataService/getAvailabilityResponse")]
        AESDataService.Availability getAvailability(int applicantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/getAvailability", ReplyAction="http://tempuri.org/IDataService/getAvailabilityResponse")]
        System.Threading.Tasks.Task<AESDataService.Availability> getAvailabilityAsync(int applicantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/getEducation", ReplyAction="http://tempuri.org/IDataService/getEducationResponse")]
        AESDataService.Education[] getEducation(int applicantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/getEducation", ReplyAction="http://tempuri.org/IDataService/getEducationResponse")]
        System.Threading.Tasks.Task<AESDataService.Education[]> getEducationAsync(int applicantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/getReferences", ReplyAction="http://tempuri.org/IDataService/getReferencesResponse")]
        AESDataService.Reference[] getReferences(int applicantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/getReferences", ReplyAction="http://tempuri.org/IDataService/getReferencesResponse")]
        System.Threading.Tasks.Task<AESDataService.Reference[]> getReferencesAsync(int applicantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/getJobHistories", ReplyAction="http://tempuri.org/IDataService/getJobHistoriesResponse")]
        AESDataService.JobHistory[] getJobHistories(int applicantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/getJobHistories", ReplyAction="http://tempuri.org/IDataService/getJobHistoriesResponse")]
        System.Threading.Tasks.Task<AESDataService.JobHistory[]> getJobHistoriesAsync(int applicantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/getESignature", ReplyAction="http://tempuri.org/IDataService/getESignatureResponse")]
        AESDataService.ElectronicSig getESignature(int applicantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/getESignature", ReplyAction="http://tempuri.org/IDataService/getESignatureResponse")]
        System.Threading.Tasks.Task<AESDataService.ElectronicSig> getESignatureAsync(int applicantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/getApplication", ReplyAction="http://tempuri.org/IDataService/getApplicationResponse")]
        AESDataService.ApplicantApp getApplication(int applicantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/getApplication", ReplyAction="http://tempuri.org/IDataService/getApplicationResponse")]
        System.Threading.Tasks.Task<AESDataService.ApplicantApp> getApplicationAsync(int applicantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/updatePersonalInfo", ReplyAction="http://tempuri.org/IDataService/updatePersonalInfoResponse")]
        int updatePersonalInfo(AESDataService.PersonalInfo personalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/updatePersonalInfo", ReplyAction="http://tempuri.org/IDataService/updatePersonalInfoResponse")]
        System.Threading.Tasks.Task<int> updatePersonalInfoAsync(AESDataService.PersonalInfo personalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/updateJobIds", ReplyAction="http://tempuri.org/IDataService/updateJobIdsResponse")]
        bool updateJobIds(int applicantId, int[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/updateJobIds", ReplyAction="http://tempuri.org/IDataService/updateJobIdsResponse")]
        System.Threading.Tasks.Task<bool> updateJobIdsAsync(int applicantId, int[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/updateAvailability", ReplyAction="http://tempuri.org/IDataService/updateAvailabilityResponse")]
        bool updateAvailability(AESDataService.Availability availability);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/updateAvailability", ReplyAction="http://tempuri.org/IDataService/updateAvailabilityResponse")]
        System.Threading.Tasks.Task<bool> updateAvailabilityAsync(AESDataService.Availability availability);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/updateEducations", ReplyAction="http://tempuri.org/IDataService/updateEducationsResponse")]
        bool updateEducations(AESDataService.Education[] educations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/updateEducations", ReplyAction="http://tempuri.org/IDataService/updateEducationsResponse")]
        System.Threading.Tasks.Task<bool> updateEducationsAsync(AESDataService.Education[] educations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/updateJobHistory", ReplyAction="http://tempuri.org/IDataService/updateJobHistoryResponse")]
        bool updateJobHistory(AESDataService.JobHistory[] jobHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/updateJobHistory", ReplyAction="http://tempuri.org/IDataService/updateJobHistoryResponse")]
        System.Threading.Tasks.Task<bool> updateJobHistoryAsync(AESDataService.JobHistory[] jobHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/updateReferences", ReplyAction="http://tempuri.org/IDataService/updateReferencesResponse")]
        bool updateReferences(AESDataService.Reference[] references);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/updateReferences", ReplyAction="http://tempuri.org/IDataService/updateReferencesResponse")]
        System.Threading.Tasks.Task<bool> updateReferencesAsync(AESDataService.Reference[] references);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/updateElectronicSig", ReplyAction="http://tempuri.org/IDataService/updateElectronicSigResponse")]
        bool updateElectronicSig(AESDataService.ElectronicSig electronicSig);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/updateElectronicSig", ReplyAction="http://tempuri.org/IDataService/updateElectronicSigResponse")]
        System.Threading.Tasks.Task<bool> updateElectronicSigAsync(AESDataService.ElectronicSig electronicSig);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/updatePassword", ReplyAction="http://tempuri.org/IDataService/updatePasswordResponse")]
        bool updatePassword(AESDataService.ApplicantAuth auth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/updatePassword", ReplyAction="http://tempuri.org/IDataService/updatePasswordResponse")]
        System.Threading.Tasks.Task<bool> updatePasswordAsync(AESDataService.ApplicantAuth auth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/deleteJobIds", ReplyAction="http://tempuri.org/IDataService/deleteJobIdsResponse")]
        bool deleteJobIds(int applicantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/deleteJobIds", ReplyAction="http://tempuri.org/IDataService/deleteJobIdsResponse")]
        System.Threading.Tasks.Task<bool> deleteJobIdsAsync(int applicantId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataServiceChannel : AESDataServiceTests.DataServiceReference.IDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataServiceClient : System.ServiceModel.ClientBase<AESDataServiceTests.DataServiceReference.IDataService>, AESDataServiceTests.DataServiceReference.IDataService {
        
        public DataServiceClient() {
        }
        
        public DataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AESDataService.Job[] getJobs(int storeId) {
            return base.Channel.getJobs(storeId);
        }
        
        public System.Threading.Tasks.Task<AESDataService.Job[]> getJobsAsync(int storeId) {
            return base.Channel.getJobsAsync(storeId);
        }
        
        public AESDataService.Store getStoreInfo(int storeId) {
            return base.Channel.getStoreInfo(storeId);
        }
        
        public System.Threading.Tasks.Task<AESDataService.Store> getStoreInfoAsync(int storeId) {
            return base.Channel.getStoreInfoAsync(storeId);
        }
        
        public AESDataService.Question[] getQuestions(int[] positionIds) {
            return base.Channel.getQuestions(positionIds);
        }
        
        public System.Threading.Tasks.Task<AESDataService.Question[]> getQuestionsAsync(int[] positionIds) {
            return base.Channel.getQuestionsAsync(positionIds);
        }
        
        public string getStoreLocation(int jobId) {
            return base.Channel.getStoreLocation(jobId);
        }
        
        public System.Threading.Tasks.Task<string> getStoreLocationAsync(int jobId) {
            return base.Channel.getStoreLocationAsync(jobId);
        }
        
        public int getApplicantId(string ssn) {
            return base.Channel.getApplicantId(ssn);
        }
        
        public System.Threading.Tasks.Task<int> getApplicantIdAsync(string ssn) {
            return base.Channel.getApplicantIdAsync(ssn);
        }
        
        public int authenticateUser(string ssn, string password) {
            return base.Channel.authenticateUser(ssn, password);
        }
        
        public System.Threading.Tasks.Task<int> authenticateUserAsync(string ssn, string password) {
            return base.Channel.authenticateUserAsync(ssn, password);
        }
        
        public string authenticateManager(string userName, string password) {
            return base.Channel.authenticateManager(userName, password);
        }
        
        public System.Threading.Tasks.Task<string> authenticateManagerAsync(string userName, string password) {
            return base.Channel.authenticateManagerAsync(userName, password);
        }
        
        public int[] getJobsAppliedFor(int applicantId) {
            return base.Channel.getJobsAppliedFor(applicantId);
        }
        
        public System.Threading.Tasks.Task<int[]> getJobsAppliedForAsync(int applicantId) {
            return base.Channel.getJobsAppliedForAsync(applicantId);
        }
        
        public AESDataService.PersonalInfo getPersonalInfo(int applicantId) {
            return base.Channel.getPersonalInfo(applicantId);
        }
        
        public System.Threading.Tasks.Task<AESDataService.PersonalInfo> getPersonalInfoAsync(int applicantId) {
            return base.Channel.getPersonalInfoAsync(applicantId);
        }
        
        public AESDataService.Availability getAvailability(int applicantId) {
            return base.Channel.getAvailability(applicantId);
        }
        
        public System.Threading.Tasks.Task<AESDataService.Availability> getAvailabilityAsync(int applicantId) {
            return base.Channel.getAvailabilityAsync(applicantId);
        }
        
        public AESDataService.Education[] getEducation(int applicantId) {
            return base.Channel.getEducation(applicantId);
        }
        
        public System.Threading.Tasks.Task<AESDataService.Education[]> getEducationAsync(int applicantId) {
            return base.Channel.getEducationAsync(applicantId);
        }
        
        public AESDataService.Reference[] getReferences(int applicantId) {
            return base.Channel.getReferences(applicantId);
        }
        
        public System.Threading.Tasks.Task<AESDataService.Reference[]> getReferencesAsync(int applicantId) {
            return base.Channel.getReferencesAsync(applicantId);
        }
        
        public AESDataService.JobHistory[] getJobHistories(int applicantId) {
            return base.Channel.getJobHistories(applicantId);
        }
        
        public System.Threading.Tasks.Task<AESDataService.JobHistory[]> getJobHistoriesAsync(int applicantId) {
            return base.Channel.getJobHistoriesAsync(applicantId);
        }
        
        public AESDataService.ElectronicSig getESignature(int applicantId) {
            return base.Channel.getESignature(applicantId);
        }
        
        public System.Threading.Tasks.Task<AESDataService.ElectronicSig> getESignatureAsync(int applicantId) {
            return base.Channel.getESignatureAsync(applicantId);
        }
        
        public AESDataService.ApplicantApp getApplication(int applicantId) {
            return base.Channel.getApplication(applicantId);
        }
        
        public System.Threading.Tasks.Task<AESDataService.ApplicantApp> getApplicationAsync(int applicantId) {
            return base.Channel.getApplicationAsync(applicantId);
        }
        
        public int updatePersonalInfo(AESDataService.PersonalInfo personalInfo) {
            return base.Channel.updatePersonalInfo(personalInfo);
        }
        
        public System.Threading.Tasks.Task<int> updatePersonalInfoAsync(AESDataService.PersonalInfo personalInfo) {
            return base.Channel.updatePersonalInfoAsync(personalInfo);
        }
        
        public bool updateJobIds(int applicantId, int[] ids) {
            return base.Channel.updateJobIds(applicantId, ids);
        }
        
        public System.Threading.Tasks.Task<bool> updateJobIdsAsync(int applicantId, int[] ids) {
            return base.Channel.updateJobIdsAsync(applicantId, ids);
        }
        
        public bool updateAvailability(AESDataService.Availability availability) {
            return base.Channel.updateAvailability(availability);
        }
        
        public System.Threading.Tasks.Task<bool> updateAvailabilityAsync(AESDataService.Availability availability) {
            return base.Channel.updateAvailabilityAsync(availability);
        }
        
        public bool updateEducations(AESDataService.Education[] educations) {
            return base.Channel.updateEducations(educations);
        }
        
        public System.Threading.Tasks.Task<bool> updateEducationsAsync(AESDataService.Education[] educations) {
            return base.Channel.updateEducationsAsync(educations);
        }
        
        public bool updateJobHistory(AESDataService.JobHistory[] jobHistory) {
            return base.Channel.updateJobHistory(jobHistory);
        }
        
        public System.Threading.Tasks.Task<bool> updateJobHistoryAsync(AESDataService.JobHistory[] jobHistory) {
            return base.Channel.updateJobHistoryAsync(jobHistory);
        }
        
        public bool updateReferences(AESDataService.Reference[] references) {
            return base.Channel.updateReferences(references);
        }
        
        public System.Threading.Tasks.Task<bool> updateReferencesAsync(AESDataService.Reference[] references) {
            return base.Channel.updateReferencesAsync(references);
        }
        
        public bool updateElectronicSig(AESDataService.ElectronicSig electronicSig) {
            return base.Channel.updateElectronicSig(electronicSig);
        }
        
        public System.Threading.Tasks.Task<bool> updateElectronicSigAsync(AESDataService.ElectronicSig electronicSig) {
            return base.Channel.updateElectronicSigAsync(electronicSig);
        }
        
        public bool updatePassword(AESDataService.ApplicantAuth auth) {
            return base.Channel.updatePassword(auth);
        }
        
        public System.Threading.Tasks.Task<bool> updatePasswordAsync(AESDataService.ApplicantAuth auth) {
            return base.Channel.updatePasswordAsync(auth);
        }
        
        public bool deleteJobIds(int applicantId) {
            return base.Channel.deleteJobIds(applicantId);
        }
        
        public System.Threading.Tasks.Task<bool> deleteJobIdsAsync(int applicantId) {
            return base.Channel.deleteJobIdsAsync(applicantId);
        }
    }
}
