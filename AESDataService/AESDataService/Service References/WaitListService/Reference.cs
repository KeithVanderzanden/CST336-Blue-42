//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AESDataService.WaitListService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WaitListService.IWaitList")]
    public interface IWaitList {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaitList/AddApplicant", ReplyAction="http://tempuri.org/IWaitList/AddApplicantResponse")]
        void AddApplicant(string name, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaitList/AddApplicant", ReplyAction="http://tempuri.org/IWaitList/AddApplicantResponse")]
        System.Threading.Tasks.Task AddApplicantAsync(string name, int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWaitListChannel : AESDataService.WaitListService.IWaitList, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WaitListClient : System.ServiceModel.ClientBase<AESDataService.WaitListService.IWaitList>, AESDataService.WaitListService.IWaitList {
        
        public WaitListClient() {
        }
        
        public WaitListClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WaitListClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WaitListClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WaitListClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddApplicant(string name, int id) {
            base.Channel.AddApplicant(name, id);
        }
        
        public System.Threading.Tasks.Task AddApplicantAsync(string name, int id) {
            return base.Channel.AddApplicantAsync(name, id);
        }
    }
}
